# HTTP(S) 代理服务端口
# port: 7890

# SOCKS5 代理服务端口
# socks-port: 7891

# Linux 和 macOS 的透明代理服务端口 (TCP 和 TProxy UDP 重定向)
# redir-port: 7892

# Linux 的透明代理服务端口 (TProxy TCP 和 TProxy UDP)
# tproxy-port: 7893

# HTTP(S) 和 SOCKS4(A)/SOCKS5 代理服务共用一个端口
# mixed-port: 7890

# 本地 SOCKS5/HTTP(S) 代理服务的认证
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# 设置为 true 以允许来自其他 LAN IP 地址的连接
# allow-lan: false

# 仅当 `allow-lan` 为 `true` 时有效
# '*': 绑定所有 IP 地址
# 192.168.122.11: 绑定单个 IPv4 地址
# "[aaaa::a8aa:ff:fe09:57d8]": 绑定单个 IPv6 地址
# bind-address: "*"

# Clash 路由工作模式
# rule: 基于规则的数据包路由
# global: 所有数据包将被转发到单个节点
# direct: 直接将数据包转发到互联网
mode: rule

# 默认情况下, Clash 将日志打印到 STDOUT
# 日志级别: info / warning / error / debug / silent
log-level: silent

# 当设置为 false 时, 解析器不会将主机名解析为 IPv6 地址
ipv6: true

# RESTful Web API 监听地址
# external-controller: 127.0.0.1:9090

# 配置目录的相对路径或静态 Web 资源目录的绝对路径.
# Clash core 将在 `http://{{external-controller}}/ui` 中提供服务.
# external-ui: folder

# RESTful API 密钥 (可选)
# 通过指定 HTTP 头 `Authorization: Bearer ${secret}` 进行身份验证
# 如果RESTful API在 0.0.0.0 上监听, 务必设置一个 secret 密钥.
# secret: ""

# 出站接口名称
# interface-name: en0

# fwmark (仅在 Linux 上有效)
# routing-mark: 6666

# 用于DNS服务器和连接建立的静态主机 (如/etc/hosts) .
#
# 支持通配符主机名 (例如 *.clash.dev, *.foo.*.example.com)
# 非通配符域名优先级高于通配符域名
# 例如 foo.example.com > *.example.com > .example.com
# P.S. +.foo.com 等于 .foo.com 和 foo.com
hosts:
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'

# profile:
  # 将 `select` 手动选择 结果存储在 $HOME/.config/clash/.cache 中
  # 如果不需要此行为, 请设置为 false
  # 当两个不同的配置具有同名的组时, 将共享所选值
  # store-selected: true

  # 持久化 fakeip
  # store-fake-ip: false

# DNS 服务设置
# 此部分是可选的. 当不存在时, DNS 服务将被禁用.
dns:
  enable: false
  listen: 0.0.0.0:53
  ipv6: true # 当为 false 时, AAAA 查询的响应将为空

  # 这些 名称服务器(nameservers) 用于解析下列 DNS 名称服务器主机名.
  # 仅指定 IP 地址
  default-nameserver:
    - 223.5.5.5
    - 114.114.114.114
  enhanced-mode: fake-ip # 或 redir-host
  fake-ip-range: 198.18.0.1/16 # Fake IP 地址池 CIDR
  # use-hosts: true # 查找 hosts 并返回 IP 记录

  # search-domains: [local] # A/AAAA 记录的搜索域

  # 此列表中的主机名将不会使用 Fake IP 解析
  # 即, 对这些域名的请求将始终使用其真实 IP 地址进行响应
  fake-ip-filter:
    # 以下域名列表参考自 vernesong/OpenClash 项目，并由 Hackl0us 整理补充
    # === LAN ===
    - "*.lan"
    - "*.localdomain"
    - "*.example"
    - "*.invalid"
    - "*.localhost"
    - "*.test"
    - "*.local"
    - "*.home.arpa"
    # === NTP Service ===
    - "time.*.com"
    - "time.*.gov"
    - "time.*.edu.cn"
    - "time.*.apple.com"

    - "time1.*.com"
    - "time2.*.com"
    - "time3.*.com"
    - "time4.*.com"
    - "time5.*.com"
    - "time6.*.com"
    - "time7.*.com"

    - "ntp.*.com"
    - "ntp1.*.com"
    - "ntp2.*.com"
    - "ntp3.*.com"
    - "ntp4.*.com"
    - "ntp5.*.com"
    - "ntp6.*.com"
    - "ntp7.*.com"

    - "*.time.edu.cn"
    - "*.ntp.org.cn"
    - "+.pool.ntp.org"

    - "time1.cloud.tencent.com"
    # === Music Service ===
    ## NetEase
    - "music.163.com"
    - "*.music.163.com"
    - "*.126.net"
    ## Baidu
    - "musicapi.taihe.com"
    - "music.taihe.com"
    ## Kugou
    - "songsearch.kugou.com"
    - "trackercdn.kugou.com"
    ## Kuwo
    - "*.kuwo.cn"
    ## JOOX
    - "api-jooxtt.sanook.com"
    - "api.joox.com"
    - "joox.com"
    ## QQ
    - "y.qq.com"
    - "*.y.qq.com"
    - "streamoc.music.tc.qq.com"
    - "mobileoc.music.tc.qq.com"
    - "isure.stream.qqmusic.qq.com"
    - "dl.stream.qqmusic.qq.com"
    - "aqqmusic.tc.qq.com"
    - "amobile.music.tc.qq.com"
    ## Xiami
    - "*.xiami.com"
    ## Migu
    - "music.migu.cn"
    - "*.music.migu.cn"
    # === Video Service ===
    ## Bilibili
    - "*.mcdn.bilivideo.cn"
    ## Netflix
    - "+.nflxvideo.net"
    # === Game Service ===
    ## Nintendo Switch
    - "+.srv.nintendo.net"
    ## Sony PlayStation
    - "+.stun.playstation.net"
    ## Microsoft Xbox
    - "xbox.*.microsoft.com"
    - "xnotify.xboxlive.com"
    ## Blizzard
    - "+.battlenet.com.cn"
    - "+.wotgame.cn"
    - "+.wggames.cn"
    - "+.wowsgame.cn"
    - "+.wargaming.net"
    ## Square Enix
    - "*.square-enix.com"
    - "*.finalfantasyxiv.com"
    - "*.ffxiv.com"
    # === Apple Software Update Service ===
    - "mesu.apple.com"
    - "swscan.apple.com"
    - "swquery.apple.com"
    - "swdownload.apple.com"
    - "swcdn.apple.com"
    - "swdist.apple.com"
    # === Windows 10 Connnect Detection ===
    - "msftconnecttest.com"
    - "*.msftconnecttest.com"
    - "msftncsi.com"
    - "*.msftncsi.com"
    # === Router ===
    ## Asus
    - router.asus.com
    - "*.router.asus.com"
    ## Linksys
    - "*.linksys.com"
    - "*.linksyssmartwifi.com"
    ## Belkin
    - "heartbeat.belkin.com"
    # === Other ===
    ## Google
    - "lens.l.google.com"
    - "stun.l.google.com"
    ## QQ Quick Login
    - "localhost.ptlogin2.qq.com"
    - "localhost.sec.qq.com"
    ## Golang
    - "proxy.golang.org"
    ## STUN Server
    - "stun.*.*"
    - "stun.*.*.*"
    - "+.stun.*.*"
    - "+.stun.*.*.*"
    - "+.stun.*.*.*.*"

  # 支持 UDP、TCP、DoT、DoH. 您可以指定要连接的端口.
  # 所有 DNS 查询都直接发送到名称服务器, 无需代理
  # Clash 使用第一个收到的响应作为 DNS 查询的结果.
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

  # 当 `fallback` 存在时, DNS 服务器将向此部分中的服务器
  # 与 `nameservers` 中的服务器发送并发请求
  # 当 GEOIP 国家不是 `CN` 时, 将使用 fallback 服务器的响应
  # fallback:
  #   - https://dns.google/dns-query

  # 如果使用 `nameservers` 解析的 IP 地址在下面指定的子网中,
  # 则认为它们无效, 并使用 `fallback` 服务器的结果.
  #
  # 当 `fallback-filter.geoip` 为 true 且 IP 地址的 GEOIP 为 `CN` 时,
  # 将使用 `nameservers` 服务器解析的 IP 地址.
  #
  # 如果 `fallback-filter.geoip` 为 false, 且不匹配 `fallback-filter.ipcidr`,
  # 则始终使用 `nameservers` 服务器的结果
  #
  # 这是对抗 DNS 污染攻击的一种措施.
  fallback-filter:
    geoip: false
    ipcidr:
      - 0.0.0.0/8
      - 10.0.0.0/8
      - 100.64.0.0/10
      - 127.0.0.0/8
      - 169.254.0.0/16
      - 172.16.0.0/12
      - 192.0.0.0/24
      - 192.0.2.0/24
      - 192.88.99.0/24
      - 192.168.0.0/16
      - 198.18.0.0/15
      - 198.51.100.0/24
      - 203.0.113.0/24
      - 224.0.0.0/4
      - 240.0.0.0/4
      - 255.255.255.255/32
    domain:
      - "+.google.com"
      - "+.facebook.com"
      - "+.youtube.com"
      - "+.githubusercontent.com"
      - "+.googlevideo.com"

  # 通过特定的名称服务器查找域名
  # nameserver-policy:
  #   'www.baidu.com': '114.114.114.114'
  #   '+.internal.crop.com': '10.0.0.1'

proxies:

proxy-providers:
  backyard:
    type: file
    url: ""
    path: ./proxy/ss/backyard.yaml
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300
  backup:
    type: file
    url: ""
    path: ./proxy/ss/backup.yaml
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300

proxy-groups:
  # url-test 可以自动选择与指定 URL 测速后，延迟最短的服务器
  - name: "auto"
    icon: https://cdn.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Auto.png
    type: url-test
    use:
      - backyard
    url: "http://www.gstatic.com/generate_204"
    interval: 300

  # load-balance 可以使相同 eTLD 请求在同一条代理线路上
  - name: "load-balance"
    type: load-balance
    use:
      - backyard
    url: "http://www.gstatic.com/generate_204"
    interval: 300

  # fallback 可以尽量按照用户书写的服务器顺序，在确保服务器可用的情况下，自动选择服务器
  - name: "fallback-auto"
    type: fallback
    proxies:
      - load-balance
    use:
      - backup
    url: "http://www.gstatic.com/generate_204"
    interval: 300

  # select 用来允许用户手动选择 代理服务器 或 服务器组
  # 您也可以使用 RESTful API 去切换服务器，这种方式推荐在 GUI 中使用
  - name: Proxy
    icon: https://cdn.jsdelivr.net/gh/Koolson/Qure@master/IconSet/Color/Static.png
    type: select
    use:
      - backyard
      - backup
    proxies:
      - auto
      - load-balance
      - fallback-auto

  - name: AppleAPI
    type: select
    proxies:
      - DIRECT
      - Proxy

  - name: MySite
    type: select
    proxies:
      - DIRECT
      - Proxy

rule-providers:
  lan:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/lan.yaml"
    interval: 3600
    path: ./rule/lan.yaml
  direct:
    behavior: domain
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/direct.yaml"
    interval: 3600
    path: ./rule/direct.yaml
  cn:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/cn.yaml"
    interval: 3600
    path: ./rule/cn.yaml
  foreign:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/foreign.yaml"
    interval: 3600
    path: ./rule/foreign.yaml
  anti-pollution:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/anti-pollution.yaml"
    interval: 3600
    path: ./rule/anti-pollution.yaml
  ad-keyword:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/ad-keyword.yaml"
    interval: 3600
    path: ./rule/ad-keyword.yaml
  apple-api:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/api.yaml"
    interval: 3600
    path: ./rule/apple/api.yaml
  apple-global-cdn:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/global-cdn.yaml"
    interval: 3600
    path: ./rule/apple/global-cdn.yaml
  apple-noncn-cdn:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/noncn-cdn.yaml"
    interval: 3600
    path: ./rule/apple/noncn-cdn.yaml
  apple-misc:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/misc.yaml"
    interval: 3600
    path: ./rule/apple/misc.yaml
  apple-direct:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/direct.yaml"
    interval: 3600
    path: ./rule/apple/direct.yaml
  apple-news:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/news.yaml"
    interval: 3600
    path: ./rule/apple/news.yaml
  youtube:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/stream/youtube.yaml"
    interval: 3600
    path: ./rule/stream/youtube.yaml
  netflix:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/stream/netflix.yaml"
    interval: 3600
    path: ./rule/stream/netflix.yaml
  telegram:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/social/telegram.yaml"
    interval: 3600
    path: ./rule/social/telegram.yaml
  anime-trackers:
    behavior: domain
    type: http
    url: "https://cdn.jsdelivr.net/gh/Pioooooo/clash-rules-bt@main/anime_trackers.txt"
    interval: 86400
    path: ./rule/anime-trackers.yaml

rules:
  # 自定义规则
  ## 您可以在此处插入您补充的自定义规则（请注意保持缩进）

  # Direct
  - RULE-SET,direct,DIRECT

  # MySite
  - DOMAIN-SUFFIX,ifplusor.win,MySite

  # Apple
  - RULE-SET,apple-api,AppleAPI
  - RULE-SET,apple-global-cdn,DIRECT
  - RULE-SET,apple-noncn-cdn,Proxy
  - RULE-SET,apple-direct,DIRECT
  - RULE-SET,apple-misc,AppleAPI
  # - DOMAIN,e.crashlytics.com,REJECT //注释此选项有助于大多数App开发者分析崩溃信息；如果您拒绝一切崩溃数据统计、搜集，请取消 # 注释。
  - DOMAIN,safebrowsing.urlsec.qq.com,DIRECT
  - DOMAIN,safebrowsing.googleapis.com,DIRECT

  # 抗 DNS 污染
  - RULE-SET,anti-pollution,Proxy

  # 常见广告域名屏蔽
  - RULE-SET,ad-keyword,REJECT

  # BitTorrent Trackers
  - RULE-SET,anime-trackers,DIRECT

  # 国外网站
  - RULE-SET,foreign,Proxy

  # App
  - RULE-SET,youtube,Proxy
  - RULE-SET,netflix,Proxy
  - RULE-SET,telegram,Proxy
  - RULE-SET,apple-news,Proxy

  # 国内网站
  - RULE-SET,cn,DIRECT

  # LAN
  - RULE-SET,lan,DIRECT

  # 最终规则
  - GEOIP,CN,DIRECT
  - MATCH,Proxy
