---
#---------------------------------------------------#
## 配置文件需要放置在 $HOME/.config/clash/config.yml
##
## 如果您不知道如何操作，请参阅 SS-Rule-Snippet 的 Wiki：
## https://github.com/Hackl0us/SS-Rule-Snippet/wiki/clash(X)
#---------------------------------------------------#

# HTTP 代理端口
port: 7890

# SOCKS5 代理端口
socks-port: 7891

# Linux 和 macOS 的 redir 透明代理端口 (重定向 TCP 和 TProxy UDP 流量)
# redir-port: 7892

# Linux 的透明代理端口（适用于 TProxy TCP 和 TProxy UDP 流量)
# tproxy-port: 7893

# HTTP(S) and SOCKS5 共用端口
# mixed-port: 7890

# 本地 SOCKS5/HTTP(S) 服务验证
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# 允许局域网的连接（可用来共享代理）
allow-lan: true

# 此功能仅在 allow-lan 设置为 true 时生效，支持三种参数：
# "*"                           绑定所有的 IP 地址
# 192.168.122.11                绑定一个的 IPv4 地址
# "[aaaa::a8aa:ff:fe09:57d8]"   绑定一个 IPv6 地址
bind-address: "*"

# Clash 路由工作模式
# 规则模式：rule（规则） / global（全局代理）/ direct（全局直连）
mode: rule

# Clash 默认将日志输出至 STDOUT
# 设置日志输出级别 (默认级别：silent，即不输出任何内容，以避免因日志内容过大而导致程序内存溢出）。
# 5 个级别：silent / error / warning / info / debug。级别越高日志输出量越大，越倾向于调试，若需要请自行开启。
log-level: silent

# When set to false, resolver won't translate hostnames to IPv6 addresses
ipv6: true

# clash 的 RESTful API 监听地址
external-controller: 127.0.0.1:9090

# 存放配置文件的相对路径，或存放网页静态资源的绝对路径
# Clash core 将会将其部署在 http://{{external-controller}}/ui
# external-ui: folder

# RESTful API 的口令 (可选)
# 通过 HTTP 头中 Authorization: Bearer ${secret} 参数来验证口令
# 当 RESTful API 的监听地址为 0.0.0.0 时，请务必设定口令以保证安全
# secret: ""

# 出站网卡接口
# interface-name: en0

# DNS 服务器和建立连接时的 静态 Hosts, 仅在 dns.enhanced-mode 模式为 redir-host 生效
# 支持通配符域名 (例如: *.clash.dev, *.foo.*.example.com )
# 不使用通配符的域名优先级高于使用通配符的域名 (例如: foo.example.com > *.example.com > .example.com )
# 注意: +.foo.com 的效果等同于 .foo.com 和 foo.com
hosts:
# '*.clash.dev': 127.0.0.1
# '.dev': 127.0.0.1
# 'alpha.clash.dev': '::1'

# DNS 服务器配置(可选；若不配置，程序内置的 DNS 服务会被关闭)
dns:
  enable: true
  listen: 0.0.0.0:53
  ipv6: true # 当此选项为 false 时, AAAA 请求将返回空

  # 以下填写的 DNS 服务器将会被用来解析 DNS 服务的域名
  # 仅填写 DNS 服务器的 IP 地址
  default-nameserver:
    - 223.5.5.5
    - 114.114.114.114
  enhanced-mode: fake-ip # 或 redir-host
  fake-ip-range: 198.18.0.1/16 # Fake IP 地址池 (CIDR 形式)
  # use-hosts: true # 查询 hosts 并返回 IP 记录

  # 在以下列表的域名将不会被解析为 fake ip，这些域名相关的解析请求将会返回它们真实的 IP 地址
  fake-ip-filter:
    # 以下域名列表参考自 vernesong/OpenClash 项目，并由 Hackl0us 整理补充
    # === LAN ===
    - "*.lan"
    - "*.localdomain"
    - "*.example"
    - "*.invalid"
    - "*.localhost"
    - "*.test"
    - "*.local"
    - "*.home.arpa"
    # === NTP Service ===
    - "time.*.com"
    - "time.*.gov"
    - "time.*.edu.cn"
    - "time.*.apple.com"

    - "time1.*.com"
    - "time2.*.com"
    - "time3.*.com"
    - "time4.*.com"
    - "time5.*.com"
    - "time6.*.com"
    - "time7.*.com"

    - "ntp.*.com"
    - "ntp1.*.com"
    - "ntp2.*.com"
    - "ntp3.*.com"
    - "ntp4.*.com"
    - "ntp5.*.com"
    - "ntp6.*.com"
    - "ntp7.*.com"

    - "*.time.edu.cn"
    - "*.ntp.org.cn"
    - "+.pool.ntp.org"

    - "time1.cloud.tencent.com"
    # === Music Service ===
    ## NetEase
    - "music.163.com"
    - "*.music.163.com"
    - "*.126.net"
    ## Baidu
    - "musicapi.taihe.com"
    - "music.taihe.com"
    ## Kugou
    - "songsearch.kugou.com"
    - "trackercdn.kugou.com"
    ## Kuwo
    - "*.kuwo.cn"
    ## JOOX
    - "api-jooxtt.sanook.com"
    - "api.joox.com"
    - "joox.com"
    ## QQ
    - "y.qq.com"
    - "*.y.qq.com"
    - "streamoc.music.tc.qq.com"
    - "mobileoc.music.tc.qq.com"
    - "isure.stream.qqmusic.qq.com"
    - "dl.stream.qqmusic.qq.com"
    - "aqqmusic.tc.qq.com"
    - "amobile.music.tc.qq.com"
    ## Xiami
    - "*.xiami.com"
    ## Migu
    - "music.migu.cn"
    - "*.music.migu.cn"
    # === Video Service ===
    ## Bilibili
    - "*.mcdn.bilivideo.cn"
    ## Netflix
    - "+.nflxvideo.net"
    # === Game Service ===
    ## Nintendo Switch
    - "+.srv.nintendo.net"
    ## Sony PlayStation
    - "+.stun.playstation.net"
    ## Microsoft Xbox
    - "xbox.*.microsoft.com"
    - "xnotify.xboxlive.com"
    ## Blizzard
    - "+.battlenet.com.cn"
    - "+.wotgame.cn"
    - "+.wggames.cn"
    - "+.wowsgame.cn"
    - "+.wargaming.net"
    ## Square Enix
    - "*.square-enix.com"
    - "*.finalfantasyxiv.com"
    - "*.ffxiv.com"
    # === Apple Software Update Service ===
    - "mesu.apple.com"
    - "swscan.apple.com"
    - "swquery.apple.com"
    - "swdownload.apple.com"
    - "swcdn.apple.com"
    - "swdist.apple.com"
    # === Windows 10 Connnect Detection ===
    - "msftconnecttest.com"
    - "*.msftconnecttest.com"
    - "msftncsi.com"
    - "*.msftncsi.com"
    # === Router ===
    ## Asus
    - "*.router.asus.com"
    ## Linksys
    - "*.linksys.com"
    - "*.linksyssmartwifi.com"
    ## Belkin
    - "heartbeat.belkin.com"
    # === Other ===
    ## Google
    - "lens.l.google.com"
    - "stun.l.google.com"
    ## QQ Quick Login
    - "localhost.ptlogin2.qq.com"
    - "localhost.sec.qq.com"
    ## Golang
    - "proxy.golang.org"
    ## STUN Server
    - "stun.*.*"
    - "stun.*.*.*"
    - "+.stun.*.*"
    - "+.stun.*.*.*"
    - "+.stun.*.*.*.*"

  # 支持 UDP / TCP / DoT / DoH 协议的 DNS 服务，可以指明具体的连接端口号。
  # 所有 DNS 请求将会直接发送到服务器，不经过任何代理。
  # Clash 会使用最先获得的解析记录回复 DNS 请求
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

  # 当 fallback 参数被配置时, DNS 请求将同时发送至上方 nameserver 列表和下方 fallback 列表中配置的所有 DNS 服务器.
  # 当解析得到的 IP 地址的地理位置不是 CN 时，clash 将会选用 fallback 中 DNS 服务器的解析结果。
  # fallback:
  #   - https://dns.google/dns-query

  # 如果使用 nameserver 列表中的服务器解析的 IP 地址在下方列表中的子网中，则它们被认为是无效的，
  # Clash 会选用 fallback 列表中配置 DNS 服务器解析得到的结果。
  #
  # 当 fallback-filter.geoip 为 true 且 IP 地址的地理位置为 CN 时，
  # Clash 会选用 nameserver 列表中配置 DNS 服务器解析得到的结果。
  #
  # 当 fallback-filter.geoip 为 false, 如果解析结果不在 fallback-filter.ipcidr 范围内，
  # Clash 总会选用 nameserver 列表中配置 DNS 服务器解析得到的结果。
  #
  # 采取以上逻辑进行域名解析是为了对抗 DNS 投毒攻击。
  fallback-filter:
    geoip: false
    ipcidr:
      - 0.0.0.0/8
      - 10.0.0.0/8
      - 100.64.0.0/10
      - 127.0.0.0/8
      - 169.254.0.0/16
      - 172.16.0.0/12
      - 192.0.0.0/24
      - 192.0.2.0/24
      - 192.88.99.0/24
      - 192.168.0.0/16
      - 198.18.0.0/15
      - 198.51.100.0/24
      - 203.0.113.0/24
      - 224.0.0.0/4
      - 240.0.0.0/4
      - 255.255.255.255/32
    domain:
      - "+.google.com"
      - "+.facebook.com"
      - "+.youtube.com"
      - "+.githubusercontent.com"
      - "+.googlevideo.com"

proxies:

proxy-providers:
  backyard:
    type: file
    path: ./proxy/ss/backyard.yaml
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300
  backup:
    type: file
    path: ./proxy/ss/backup.yaml
    health-check:
      enable: true
      url: http://www.gstatic.com/generate_204
      interval: 300

proxy-groups:
  # url-test 可以自动选择与指定 URL 测速后，延迟最短的服务器
  - name: "auto"
    type: url-test
    use:
      - backyard
    url: "http://www.gstatic.com/generate_204"
    interval: 300

  # load-balance 可以使相同 eTLD 请求在同一条代理线路上
  - name: "load-balance"
    type: load-balance
    use:
      - backyard
    url: "http://www.gstatic.com/generate_204"
    interval: 300

  # fallback 可以尽量按照用户书写的服务器顺序，在确保服务器可用的情况下，自动选择服务器
  - name: "fallback-auto"
    type: fallback
    proxies:
      - load-balance
    use:
      - backup
    url: "http://www.gstatic.com/generate_204"
    interval: 300

  # select 用来允许用户手动选择 代理服务器 或 服务器组
  # 您也可以使用 RESTful API 去切换服务器，这种方式推荐在 GUI 中使用
  - name: Proxy
    type: select
    use:
      - backyard
      - backup
    proxies:
      - auto
      - load-balance
      - fallback-auto

  - name: AppleApiProxy
    type: select
    proxies:
      - Proxy
      - DIRECT

rule-providers:
  lan:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/lan.yaml"
    interval: 3600
    path: ./rule/lan.yaml
  cn:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/cn.yaml"
    interval: 3600
    path: ./rule/cn.yaml
  foreign:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/foreign.yaml"
    interval: 3600
    path: ./rule/foreign.yaml
  anti-pollution:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/anti-pollution.yaml"
    interval: 3600
    path: ./rule/anti-pollution.yaml
  ad-keyword:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/ad-keyword.yaml"
    interval: 3600
    path: ./rule/ad-keyword.yaml
  apple-api:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/api.yaml"
    interval: 3600
    path: ./rule/apple/api.yaml
  apple-global-cdn:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/global-cdn.yaml"
    interval: 3600
    path: ./rule/apple/global-cdn.yaml
  apple-noncn-cdn:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/noncn-cdn.yaml"
    interval: 3600
    path: ./rule/apple/noncn-cdn.yaml
  apple-misc:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/misc.yaml"
    interval: 3600
    path: ./rule/apple/misc.yaml
  apple-direct:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/direct.yaml"
    interval: 3600
    path: ./rule/apple/direct.yaml
  apple-news:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/apple/news.yaml"
    interval: 3600
    path: ./rule/apple/news.yaml
  youtube:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/stream/youtube.yaml"
    interval: 3600
    path: ./rule/stream/youtube.yaml
  netflix:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/stream/netflix.yaml"
    interval: 3600
    path: ./rule/stream/netflix.yaml
  telegram:
    behavior: "classical"
    type: http
    url: "https://cdn.jsdelivr.net/gh/ifplusor/ctl-tower@main/clash/rule/social/telegram.yaml"
    interval: 3600
    path: ./rule/social/telegram.yaml

rules:
  # 自定义规则
  ## 您可以在此处插入您补充的自定义规则（请注意保持缩进）

  # Apple
  - RULE-SET,apple-api,AppleApiProxy
  - RULE-SET,apple-global-cdn,DIRECT
  - RULE-SET,apple-noncn-cdn,Proxy
  - RULE-SET,apple-direct,DIRECT
  - RULE-SET,apple-misc,AppleApiProxy
  # - DOMAIN,e.crashlytics.com,REJECT //注释此选项有助于大多数App开发者分析崩溃信息；如果您拒绝一切崩溃数据统计、搜集，请取消 # 注释。
  - DOMAIN,safebrowsing.urlsec.qq.com,DIRECT
  - DOMAIN,safebrowsing.googleapis.com,DIRECT

  # 抗 DNS 污染
  - RULE-SET,anti-pollution,Proxy

  # 常见广告域名屏蔽
  - RULE-SET,ad-keyword,REJECT

  # 国外网站
  - RULE-SET,foreign,Proxy

  # App
  - RULE-SET,youtube,Proxy
  - RULE-SET,netflix,Proxy
  - RULE-SET,telegram,Proxy
  - RULE-SET,apple-news,Proxy

  # 国内网站
  - RULE-SET,cn,DIRECT

  # LAN
  - RULE-SET,lan,DIRECT

  # 最终规则
  - GEOIP,CN,DIRECT
  - MATCH,Proxy
